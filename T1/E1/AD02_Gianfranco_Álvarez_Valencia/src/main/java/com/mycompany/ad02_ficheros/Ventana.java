/*
 * Acceso a Datos - Tarea UT2
 */
package com.mycompany.ad02_ficheros;

import java.io.File;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alba Tortosa
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaFicheros = new javax.swing.JTable();
        textoRuta = new javax.swing.JTextField();
        botonAbrir = new javax.swing.JButton();
        botonExportarTxt = new javax.swing.JButton();
        botonNuevaCarpeta = new javax.swing.JButton();
        botonNuevoFichero = new javax.swing.JButton();
        botonBorrar = new javax.swing.JButton();
        botonCopiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaFicheros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Tipo", "Tamaño", "Fecha modificación"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaFicheros);
        if (tablaFicheros.getColumnModel().getColumnCount() > 0) {
            tablaFicheros.getColumnModel().getColumn(0).setPreferredWidth(200);
            tablaFicheros.getColumnModel().getColumn(1).setPreferredWidth(20);
            tablaFicheros.getColumnModel().getColumn(2).setPreferredWidth(20);
            tablaFicheros.getColumnModel().getColumn(3).setPreferredWidth(20);
        }

        textoRuta.setText("...");

        botonAbrir.setText("Abrir");
        botonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbrirActionPerformed(evt);
            }
        });

        botonExportarTxt.setText("Exportar TXT");
        botonExportarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonExportarTxtActionPerformed(evt);
            }
        });

        botonNuevaCarpeta.setText("Nueva carpeta");
        botonNuevaCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevaCarpetaActionPerformed(evt);
            }
        });

        botonNuevoFichero.setText("Nuevo fichero");
        botonNuevoFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoFicheroActionPerformed(evt);
            }
        });

        botonBorrar.setText("Borrar");
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        botonCopiar.setText("Copiar");
        botonCopiar.setToolTipText("");
        botonCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCopiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(textoRuta, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonAbrir))
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonCopiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonExportarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonNuevaCarpeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonNuevoFichero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAbrir))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(botonExportarTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonNuevaCarpeta)
                        .addGap(13, 13, 13)
                        .addComponent(botonNuevoFichero)
                        .addGap(13, 13, 13)
                        .addComponent(botonBorrar)
                        .addGap(18, 18, 18)
                        .addComponent(botonCopiar)
                        .addContainerGap(137, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbrirActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int result = fileChooser.showOpenDialog(this);
        if (result != JFileChooser.CANCEL_OPTION) {
            
            File directory = fileChooser.getSelectedFile();
            if ((directory == null) || (directory.getName().equals(""))) {
                textoRuta.setText("...");
            } else {
                textoRuta.setText(directory.getAbsolutePath());
            }
            ficheros = Ficheros.buscarFicheros(textoRuta.getText());            
            actualizarTabla();
        }
    }//GEN-LAST:event_botonAbrirActionPerformed

    private void botonCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCopiarActionPerformed
        int fila = tablaFicheros.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un fichero para copiar.");
        } else {  
            String nombreFichero = tablaFicheros.getModel().getValueAt(fila, 0).toString();//Es 0 no 1
            String mensaje = Ficheros.copiarFichero(textoRuta.getText(), nombreFichero);
            JOptionPane.showMessageDialog(null, mensaje);          
            ficheros = Ficheros.buscarFicheros(textoRuta.getText());         
            actualizarTabla();
        }
    }//GEN-LAST:event_botonCopiarActionPerformed

    private void botonExportarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonExportarTxtActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        
        int result = fileChooser.showSaveDialog(this);
        if (result != JFileChooser.CANCEL_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            //System.out.println(fileToSave);
            String mensaje = Ficheros.exportarTxt(ficheros,fileToSave);
            JOptionPane.showMessageDialog(null, mensaje);
        }
    }//GEN-LAST:event_botonExportarTxtActionPerformed

    private void botonNuevaCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevaCarpetaActionPerformed
        String nombre = JOptionPane.showInputDialog("Introduzca el nombre de la nueva carpeta:");
        String mensaje = Ficheros.nuevaCarpeta(textoRuta.getText(), nombre);
        JOptionPane.showMessageDialog(null, mensaje);
        ficheros = Ficheros.buscarFicheros(textoRuta.getText());         
        actualizarTabla();
    }//GEN-LAST:event_botonNuevaCarpetaActionPerformed

    private void botonNuevoFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoFicheroActionPerformed
        String nombre = JOptionPane.showInputDialog("Introduzca el nombre del nuevo fichero:");
        String mensaje = Ficheros.nuevoFichero(textoRuta.getText(), nombre);
        JOptionPane.showMessageDialog(null, mensaje);
        ficheros = Ficheros.buscarFicheros(textoRuta.getText());         
        actualizarTabla();
    }//GEN-LAST:event_botonNuevoFicheroActionPerformed

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
        int fila = tablaFicheros.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un fichero para eliminar.");
        } else {
            String nombreFichero = tablaFicheros.getModel().getValueAt(fila, 0).toString();//Es 0 no 1
            //System.out.println(nombreFichero);
            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea eliminar el fichero " + nombreFichero + "?");
            if (confirmacion == 0) {//Es 0 no 1
                //System.out.println(nombreFichero);
                String mensaje = Ficheros.borrarFichero(textoRuta.getText(), nombreFichero);
                JOptionPane.showMessageDialog(null, mensaje);
                ficheros = Ficheros.buscarFicheros(textoRuta.getText());         
                actualizarTabla();
            }
        }
    }//GEN-LAST:event_botonBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    
    
    private void actualizarTabla() {
         
        Vector<String> tableHeaders = new Vector<String>();
        Vector tableData = new Vector();
        tableHeaders.add("Nombre");
        tableHeaders.add("Tipo");
        tableHeaders.add("Tamaño");
        tableHeaders.add("Fecha Modificación");
        
        for (Fichero fichero : ficheros) {
            Vector<Object> oneRow = new Vector<Object>();
            
            //ESCRIBE AQUÍ TU CÓDIGO
            //INICIO
            //Rellena una fila de la tabla con el nombre, tipo, tamaño en Kb y última fecha de modificación del fichero
            oneRow.add(fichero.getNombre());
            oneRow.add(fichero.getTipo());
            oneRow.add(fichero.getKilobytes() + " Kb");
            oneRow.add(fichero.getUltimaModificacion());
            
            //FIN
            tableData.add(oneRow);
        }
        
        tablaFicheros.setModel(new DefaultTableModel(tableData, tableHeaders));
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAbrir;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonCopiar;
    private javax.swing.JButton botonExportarTxt;
    private javax.swing.JButton botonNuevaCarpeta;
    private javax.swing.JButton botonNuevoFichero;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaFicheros;
    private javax.swing.JTextField textoRuta;
    // End of variables declaration//GEN-END:variables

    private ArrayList<Fichero> ficheros;

}
