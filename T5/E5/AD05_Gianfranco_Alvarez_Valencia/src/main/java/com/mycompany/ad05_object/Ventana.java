/*
 * Acceso a Datos - Tarea UT5
 */
package com.mycompany.ad05_object;

import java.util.ArrayList;
import java.util.Vector;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.criteria.CriteriaBuilder;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alba Tortosa
 */
public class Ventana extends javax.swing.JFrame {

    

    /**
     * Creates new form AD04_Tarea
     */
    public Ventana() {
        initComponents();

        // Abrir conexión a la base de datos embebida (crea la base de datos si no existe)
        AccesoDatos.crearConexion();

        //Almacenamos los datos iniciales
        almacenarDatos();
        //Inicializamos el desplegable de directores con los datos de la base de datos
        actualizarComboDirectores();       
        //Inicializamos la tabla de peliculas
        actualizarTablaPeliculas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPeliculas = new javax.swing.JTable();
        buscar = new javax.swing.JButton();
        comboDirectores = new javax.swing.JComboBox<>();
        nuevoDirector = new javax.swing.JButton();
        nuevaPelicula = new javax.swing.JButton();
        borrarPelicula = new javax.swing.JButton();
        editarPelicula = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel1.setText("Películas");

        jLabel2.setText("Título");

        jLabel3.setText("Director");

        tablaPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Título", "Director", "Duracion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPeliculas.setColumnSelectionAllowed(true);
        tablaPeliculas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaPeliculas);
        tablaPeliculas.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarPeliculaslActionPerformed(evt);
            }
        });

        comboDirectores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        nuevoDirector.setText("Nuevo director");
        nuevoDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoDirectorActionPerformed(evt);
            }
        });

        nuevaPelicula.setText("Nueva película");
        nuevaPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevaPeliculaActionPerformed(evt);
            }
        });

        borrarPelicula.setText("Eliminar pelicula");
        borrarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarPeliculaActionPerformed(evt);
            }
        });

        editarPelicula.setText("Editar pelicula");
        editarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarPeliculaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel2)
                                        .addGap(17, 17, 17)
                                        .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nuevaPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(nuevoDirector)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(borrarPelicula)
                                        .addGap(39, 39, 39)
                                        .addComponent(editarPelicula))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboDirectores, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buscar)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(comboDirectores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevaPelicula)
                    .addComponent(nuevoDirector)
                    .addComponent(borrarPelicula)
                    .addComponent(editarPelicula))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarPeliculaslActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarPeliculaslActionPerformed
        //Mostramos los resultasdos
        actualizarTablaPeliculas();
    }//GEN-LAST:event_buscarPeliculaslActionPerformed

    private void nuevoDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoDirectorActionPerformed
        VentanaDirector ventanaCrear = new VentanaDirector(this);
        ventanaCrear.setVisible(rootPaneCheckingEnabled);
        ventanaCrear.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_nuevoDirectorActionPerformed

    private void nuevaPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevaPeliculaActionPerformed
        VentanaPelicula ventanaCrear = new VentanaPelicula(this, VentanaPelicula.MODO_CREAR);
        ventanaCrear.setVisible(rootPaneCheckingEnabled);
        ventanaCrear.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_nuevaPeliculaActionPerformed

    private void borrarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarPeliculaActionPerformed
        int fila = tablaPeliculas.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una película para eliminar.");
        } else {
            String titulo = tablaPeliculas.getModel().getValueAt(fila, 0).toString();
            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea eliminar la película con titulo " + titulo + "?");
            if (confirmacion == 0) {
                String mensaje = AccesoDatos.borrarPelicula(titulo);
                JOptionPane.showMessageDialog(null, mensaje);

                actualizarTablaPeliculas();
            }
        }
    }//GEN-LAST:event_borrarPeliculaActionPerformed

    private void editarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarPeliculaActionPerformed
        int fila = tablaPeliculas.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una película para editar.");
        } else {
            //ABRIR VENTANA  Y RECOGER DATOS
            VentanaPelicula ventanaEditar = new VentanaPelicula(this, VentanaPelicula.MODO_EDITAR);
            ventanaEditar.setCampoTitulo(tablaPeliculas.getModel().getValueAt(fila, 0).toString());
            ventanaEditar.setCampoDuracion(tablaPeliculas.getModel().getValueAt(fila, 2).toString());
            ventanaEditar.setCampoDirector(tablaPeliculas.getModel().getValueAt(fila, 1).toString());
            
            ventanaEditar.setVisible(rootPaneCheckingEnabled);
            ventanaEditar.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
    }//GEN-LAST:event_editarPeliculaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrarPelicula;
    private javax.swing.JButton buscar;
    private javax.swing.JComboBox<String> comboDirectores;
    private javax.swing.JButton editarPelicula;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevaPelicula;
    private javax.swing.JButton nuevoDirector;
    private javax.swing.JTable tablaPeliculas;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables

    public void actualizarTablaPeliculas() {
        
        ArrayList<Pelicula> resultList = AccesoDatos.buscarPeliculas(txtTitulo.getText(), comboDirectores.getSelectedItem().toString());
        
        Vector<String> tableHeaders = new Vector<String>();
        Vector tableData = new Vector();
        tableHeaders.add("Titulo");
        tableHeaders.add("Director");
        tableHeaders.add("Duración");

        for (Pelicula pelicula : resultList) {
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(pelicula.getTitulo());
            oneRow.add(pelicula.getDirector().getNombre());
            oneRow.add(pelicula.getDuracion());

            tableData.add(oneRow);
        }
        tablaPeliculas.setModel(new DefaultTableModel(tableData, tableHeaders));
    }
    
    public void actualizarComboDirectores() {
        ArrayList<String> directores = AccesoDatos.buscarDirectores();
        directores.add(0, "");
        comboDirectores.setModel(new javax.swing.DefaultComboBoxModel<>(directores.toArray(new String[0])));
    }

    private void almacenarDatos() {

        AccesoDatos.nuevoDirector("Quentin Tarantino", "EEUU");
        AccesoDatos.nuevoDirector("Alejandro Amenabar", "ESPAÑA");
        
        AccesoDatos.nuevaPelicula("PULP FICTION", 153, "Quentin Tarantino");
        AccesoDatos.nuevaPelicula("KILL BILL VOL.1", 110, "Quentin Tarantino");
        AccesoDatos.nuevaPelicula("ABRE LOS OJOS", 117, "Alejandro Amenabar");
        AccesoDatos.nuevaPelicula("TESIS", 125, "Alejandro Amenabar");
        AccesoDatos.nuevaPelicula("KILL BILL VOL.2", 137, "Quentin Tarantino");

    }

}
